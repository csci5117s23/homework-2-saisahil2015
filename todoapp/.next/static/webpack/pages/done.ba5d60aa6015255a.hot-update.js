"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/done",{

/***/ "./src/modules/data.js":
/*!*****************************!*\
  !*** ./src/modules/data.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getAllTasks\": function() { return /* binding */ getAllTasks; },\n/* harmony export */   \"getTaskById\": function() { return /* binding */ getTaskById; },\n/* harmony export */   \"postTask\": function() { return /* binding */ postTask; },\n/* harmony export */   \"putTask\": function() { return /* binding */ putTask; }\n/* harmony export */ });\n//Hub of all REST APIs\nconst API_ENDPOINT = \"https://backend-sumc.api.codehooks.io/dev/toDo\";\nconst API_KEY = \" a80b0c50-8253-4977-b9ef-71122f66ff97\";\nasync function getAllTasks() {\n    const response = await fetch(API_ENDPOINT, {\n        method: \"GET\",\n        headers: {\n            \"x-apikey\": API_KEY,\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    const data = await response.json();\n    return data;\n}\nasync function getTaskById(taskId) {\n    const response = await fetch(\"\".concat(API_ENDPOINT, \"/\").concat(taskId), {\n        method: \"GET\",\n        headers: {\n            \"x-apikey\": API_KEY,\n            \"Content-Type\": \"application/json\"\n        }\n    });\n    const data = await response.json();\n    return data;\n}\nasync function postTask(newTask) {\n    await fetch(API_ENDPOINT, {\n        method: \"POST\",\n        body: JSON.stringify(newTask),\n        headers: {\n            \"x-apikey\": API_KEY,\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\nasync function putTask(updatedTask) {\n    await fetch(API_ENDPOINT, {\n        method: \"PUT\",\n        body: JSON.stringify(updatedTask),\n        headers: {\n            \"x-apikey\": API_KEY,\n            \"Content-Type\": \"application/json\"\n        }\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbW9kdWxlcy9kYXRhLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxzQkFBc0I7QUFDdEIsTUFBTUEsZUFBZTtBQUNyQixNQUFNQyxVQUFVO0FBRVQsZUFBZUMsY0FBYztJQUNsQyxNQUFNQyxXQUFXLE1BQU1DLE1BQU1KLGNBQWM7UUFDekNLLFFBQVE7UUFDUkMsU0FBUztZQUFFLFlBQVlMO1lBQVMsZ0JBQWdCO1FBQW1CO0lBQ3JFO0lBQ0EsTUFBTU0sT0FBTyxNQUFNSixTQUFTSyxJQUFJO0lBQ2hDLE9BQU9EO0FBQ1QsQ0FBQztBQUVNLGVBQWVFLFlBQVlDLE1BQU0sRUFBRTtJQUN4QyxNQUFNUCxXQUFXLE1BQU1DLE1BQU0sR0FBbUJNLE9BQWhCVixjQUFhLEtBQVUsT0FBUFUsU0FBVTtRQUN4REwsUUFBUTtRQUNSQyxTQUFTO1lBQUUsWUFBWUw7WUFBUyxnQkFBZ0I7UUFBbUI7SUFDckU7SUFDQSxNQUFNTSxPQUFPLE1BQU1KLFNBQVNLLElBQUk7SUFDaEMsT0FBT0Q7QUFDVCxDQUFDO0FBRU0sZUFBZUksU0FBU0MsT0FBTyxFQUFFO0lBQ3RDLE1BQU1SLE1BQU1KLGNBQWM7UUFDeEJLLFFBQVE7UUFDUlEsTUFBTUMsS0FBS0MsU0FBUyxDQUFDSDtRQUNyQk4sU0FBUztZQUFFLFlBQVlMO1lBQVMsZ0JBQWdCO1FBQW1CO0lBQ3JFO0FBQ0YsQ0FBQztBQUVNLGVBQWVlLFFBQVFDLFdBQVcsRUFBRTtJQUN6QyxNQUFNYixNQUFNSixjQUFjO1FBQ3hCSyxRQUFRO1FBQ1JRLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQ0U7UUFDckJYLFNBQVM7WUFBRSxZQUFZTDtZQUFTLGdCQUFnQjtRQUFtQjtJQUNyRTtBQUNGLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL21vZHVsZXMvZGF0YS5qcz8wOTY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vSHViIG9mIGFsbCBSRVNUIEFQSXNcbmNvbnN0IEFQSV9FTkRQT0lOVCA9ICdodHRwczovL2JhY2tlbmQtc3VtYy5hcGkuY29kZWhvb2tzLmlvL2Rldi90b0RvJztcbmNvbnN0IEFQSV9LRVkgPSAnIGE4MGIwYzUwLTgyNTMtNDk3Ny1iOWVmLTcxMTIyZjY2ZmY5Nyc7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxUYXNrcygpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChBUElfRU5EUE9JTlQsIHtcbiAgICBtZXRob2Q6ICdHRVQnLFxuICAgIGhlYWRlcnM6IHsgJ3gtYXBpa2V5JzogQVBJX0tFWSwgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICB9KTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRUYXNrQnlJZCh0YXNrSWQpIHtcbiAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHtBUElfRU5EUE9JTlR9LyR7dGFza0lkfWAsIHtcbiAgICBtZXRob2Q6ICdHRVQnLFxuICAgIGhlYWRlcnM6IHsgJ3gtYXBpa2V5JzogQVBJX0tFWSwgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICB9KTtcbiAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBwb3N0VGFzayhuZXdUYXNrKSB7XG4gIGF3YWl0IGZldGNoKEFQSV9FTkRQT0lOVCwge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KG5ld1Rhc2spLFxuICAgIGhlYWRlcnM6IHsgJ3gtYXBpa2V5JzogQVBJX0tFWSwgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICB9KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHB1dFRhc2sodXBkYXRlZFRhc2spIHtcbiAgYXdhaXQgZmV0Y2goQVBJX0VORFBPSU5ULCB7XG4gICAgbWV0aG9kOiAnUFVUJyxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1cGRhdGVkVGFzayksXG4gICAgaGVhZGVyczogeyAneC1hcGlrZXknOiBBUElfS0VZLCAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gIH0pO1xufVxuIl0sIm5hbWVzIjpbIkFQSV9FTkRQT0lOVCIsIkFQSV9LRVkiLCJnZXRBbGxUYXNrcyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiZGF0YSIsImpzb24iLCJnZXRUYXNrQnlJZCIsInRhc2tJZCIsInBvc3RUYXNrIiwibmV3VGFzayIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicHV0VGFzayIsInVwZGF0ZWRUYXNrIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/modules/data.js\n"));

/***/ })

});